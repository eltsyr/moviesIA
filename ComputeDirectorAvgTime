import csv
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

#chargement fichiers
dfa_full = pd.read_csv("AllMoviesDetailsCleaned.csv", sep=";", low_memory=False, parse_dates=["release_date"])
dfb_full = pd.read_csv("AllMoviesCastingRaw.csv", sep=";", low_memory=False)

#Fusion fichiers par ids communes
df_full = pd.merge(dfa_full, dfb_full, on='id')
#Création fichier avec les seules données pertinentes
df_rel = df_full[['id','director_name','release_date']].sort_values(by='director_name',ascending=True)

df_rel = df_rel.fillna('0')
df_rel['release_date']=df_rel['release_date'].map(lambda x:x.year)
#On réindexe
df_rel2 = df_rel.reset_index(drop = True)


#calcul du temps moyen entre films
df = df_rel2
#valeurs retenues pour chaque réal: nombre de films, liste des années de sortie des films
dir_time={}
x = 0
#parcours de la liste de réals
while x < len(df):
    dir_name = df.loc[x,'director_name']
    dir_time[dir_name] = {'movie_nb':0, 'dates':[]}
    #les réals sont par ordre alphabétique, on parcout la liste de films de chacun
    while df.loc[x,'director_name'] == dir_name :
        dir_time[dir_name]['movie_nb'] +=1
        #on ajoute la date à la liste si elle n'y est pas déjà
        if df.loc[x,'release_date'] not in dir_time[dir_name]['dates']:
            dir_time[dir_name]['dates'].append(df.loc[x,'release_date'])
        x += 1
        if x == len(df):
            break
#print(x)
#print(dir_time)

dir_avg = {}
for key in dir_time:
    # temps entre films: valeur de 2 ans par défaut
    if dir_time[key]['movie_nb'] == 1:
            dir_avg[key] = 2.0
    #sinon: 
    else:
        min_date = min(dir_time[key]['dates'])
        max_date = max(dir_time[key]['dates'])
        movie_nb = dir_time[key]['movie_nb']
        #valeur par défaut de 2 ans pour le premier film
        dir_avg[key] = round((max_date - min_date + 2) / movie_nb, 1)

print(dir_avg)

#edition fichier csv
with open('dir_avgtime.csv','w',encoding='utf-8') as file:
    writer = csv.writer(file, delimiter=';', lineterminator='\n')
    writer.writerow(('director_name', 'avg_time'))
    for director_name in dir_avg:
        row=[director_name,dir_avg[director_name]]
        writer.writerow(row)
